spring.application.name=blog-api

# Database Configuration
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/blogAPI}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:_J@ymakwana612}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging Configuration
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG:DEBUG}
logging.level.org.hibernate.type.descriptor.sql=${HIBERNATE_TYPE_LOG:TRACE}
logging.level.com.blogapi=${APP_LOG_LEVEL:INFO}

# Security Configuration
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin123}

# JWT Configuration
jwt.secret=${JWT_SECRET:_J@ymakwana612}
jwt.expiration=${JWT_EXPIRATION:3600000}

# Server Configuration
server.port=8080
server.servlet.context-path=${CONTEXT_PATH:}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

# Rate Limiting
rate.limit.enabled=${RATE_LIMIT_ENABLED:true}
rate.limit.requests-per-minute=${RATE_LIMIT_REQUESTS_PER_MINUTE:100}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.info.env.enabled=true

